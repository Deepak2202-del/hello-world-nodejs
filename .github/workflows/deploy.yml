name: Deploy

on:
  push:
    branches:
      - master
# The workflow is triggered whenever there is a push event to the master branch.
jobs:
  build:
    runs-on: ubuntu-latest
#The job is named build and runs on the latest Ubuntu virtual environment provided by GitHub Actions.
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
#This step uses the actions/checkout action to clone the repository's code into the runner.
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
#This step logs into Docker Hub using the Docker login action. The credentials are stored in GitHub Secrets (DOCKER_USERNAME and DOCKER_PASSWORD).
    - name: Build Docker image
      run: |
        docker build -t dravula/hello-world-nodejs-ecs:${{ github.sha }} .
#This step builds a Docker image using the Docker build command.
# The image is tagged with dravula/hello-world-nodejs-ecs followed by the short SHA of the commit (${{ github.sha }}) to uniquely identify the image.
    - name: Push Docker image
      run: |
        docker push dravula/hello-world-nodejs-ecs:${{ github.sha }}
#This step pushes the built Docker image to Docker Hub
    - name: Deploy to ECS
      run: |

        terraform init
        terraform apply --auto-approve
        
#This step initializes and applies a Terraform configuration to deploy the application to AWS ECS.
#terraform init initializes the Terraform working directory.
#terraform apply --auto-approve applies the Terraform configuration without requiring interactive approval.
